{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\model\\order.js"
    ],
    "names": [
        "_",
        "require",
        "module",
        "exports",
        "think",
        "Model",
        "generateOrderNumber",
        "date",
        "Date",
        "getFullYear",
        "padStart",
        "getMonth",
        "getDay",
        "getHours",
        "getMinutes",
        "getSeconds",
        "random",
        "getOrderHandleOption",
        "orderId",
        "handleOption",
        "cancel",
        "delete",
        "pay",
        "delivery",
        "confirm",
        "buy",
        "orderInfo",
        "where",
        "id",
        "find",
        "order_status",
        "getOrderStatusText",
        "statusText",
        "getOrderBtnText"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\admin\\model\\order.js",
    "sourcesContent": [
        "const _ = require('lodash');\r\nmodule.exports = class extends think.Model {\r\n    /**\r\n     * 生成订单的编号order_sn\r\n     * @returns {string}\r\n     */\r\n    generateOrderNumber() {\r\n        const date = new Date();\r\n        return date.getFullYear() + _.padStart(date.getMonth(), 2, '0') + _.padStart(date.getDay(), 2, '0') + _.padStart(date.getHours(), 2, '0') + _.padStart(date.getMinutes(), 2, '0') + _.padStart(date.getSeconds(), 2, '0') + _.random(100000, 999999);\r\n    }\r\n    /**\r\n     * 获取订单可操作的选项\r\n     * @param orderId\r\n     */\r\n    async getOrderHandleOption(orderId) {\r\n        const handleOption = {\r\n            cancel: false, // 取消操作\r\n            delete: false, // 删除操作\r\n            pay: false, // 支付操作\r\n            delivery: false, // 确认收货操作\r\n            confirm: false, // 完成订单操作\r\n            buy: false // 再次购买\r\n        };\r\n        const orderInfo = await this.where({\r\n            id: orderId\r\n        }).find();\r\n        // 订单流程：下单成功－》支付订单－》发货－》收货－》评论\r\n        // 订单相关状态字段设计，采用单个字段表示全部的订单状态\r\n        // 1xx表示订单取消和删除等状态 0订单创建成功等待付款，101订单已取消，102订单已删除\r\n        // 2xx表示订单支付状态,201订单已付款，等待发货\r\n        // 3xx表示订单物流相关状态,300订单已发货，301用户确认收货\r\n        // 4xx表示订单退换货相关的状态,401没有发货，退款402,已收货，退款退货\r\n        // 如果订单已经取消或是已完成，则可删除和再次购买\r\n        if (orderInfo.order_status === 101) {\r\n            handleOption.delete = true;\r\n            handleOption.buy = true;\r\n        }\r\n        // 如果订单没有被取消，且没有支付，则可支付，可取消\r\n        if (orderInfo.order_status === 0) {\r\n            handleOption.cancel = true;\r\n            handleOption.pay = true;\r\n        }\r\n        // 如果订单已经发货，没有收货，则可收货操作和退款、退货操作\r\n        if (orderInfo.order_status === 300) {\r\n            handleOption.cancel = true;\r\n            handleOption.pay = true;\r\n        }\r\n        // 如果订单已经支付，且已经收货，则可完成交易、评论和再次购买\r\n        if (orderInfo.order_status === 301) {\r\n            handleOption.delete = true;\r\n            handleOption.buy = true;\r\n        }\r\n        return handleOption;\r\n    }\r\n    async getOrderStatusText(orderId) {\r\n        const orderInfo = await this.where({\r\n            id: orderId\r\n        }).find();\r\n        let statusText = '';\r\n        switch (orderInfo.order_status) {\r\n            case 101:\r\n                statusText = '待付款';\r\n                break;\r\n            case 102:\r\n                statusText = '交易关闭';\r\n                break;\r\n            case 103:\r\n                statusText = '交易关闭'; //到时间系统自动取消\r\n                break;\r\n            case 201:\r\n                statusText = '待备货';\r\n                break;\r\n            case 300:\r\n                statusText = '待发货';\r\n                break;\r\n            case 301:\r\n                statusText = '已发货';\r\n                break;\r\n            case 302:\r\n                statusText = '待评价';\r\n                break;\r\n            case 303:\r\n                statusText = '待评价'; //到时间，未收货的系统自动收货、\r\n                break;\r\n            case 401:\r\n                statusText = '交易成功'; //到时间，未收货的系统自动收货、\r\n                break;\r\n        }\r\n        return statusText;\r\n    }\r\n    async getOrderBtnText(orderId) {\r\n        const orderInfo = await this.where({\r\n            id: orderId\r\n        }).find();\r\n        let statusText = '';\r\n        switch (orderInfo.order_status) {\r\n            case 101:\r\n                statusText = '修改价格';\r\n                break;\r\n            case 102:\r\n                statusText = '查看详情';\r\n                break;\r\n            case 103:\r\n                statusText = '查看详情'; //到时间系统自动取消\r\n                break;\r\n            case 201:\r\n                statusText = '备货';\r\n                break;\r\n            case 202:\r\n                statusText = '查看详情';\r\n                break;\r\n            case 203:\r\n                statusText = '查看详情';\r\n                break;\r\n            case 300:\r\n                statusText = '打印快递单';\r\n                break;\r\n            case 301:\r\n                statusText = '查看详情';\r\n                break;\r\n            case 302:\r\n                statusText = '查看详情';\r\n                break;\r\n            case 303:\r\n                statusText = '查看详情'; //到时间，未收货的系统自动收货、\r\n                break;\r\n            case 401:\r\n                statusText = '查看详情'; //到时间，未收货的系统自动收货、\r\n                break;\r\n        }\r\n        if (orderInfo.order_status == 301) {\r\n            statusText = '确认收货'\r\n        }\r\n        return statusText;\r\n    }\r\n};"
    ]
}