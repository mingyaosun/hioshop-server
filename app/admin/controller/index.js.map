{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\index.js"
    ],
    "names": [
        "Base",
        "require",
        "moment",
        "module",
        "exports",
        "indexAction",
        "goodsOnsale",
        "model",
        "where",
        "is_on_sale",
        "is_delete",
        "count",
        "orderToDelivery",
        "order_status",
        "user",
        "data",
        "field",
        "find",
        "timestamp",
        "countdown",
        "info",
        "success",
        "getQiniuTokenAction",
        "TokenSerivce",
        "service",
        "getQiniuToken",
        "qiniuToken",
        "uploadToken",
        "domain",
        "token",
        "url",
        "mainAction",
        "index",
        "get",
        "console",
        "log",
        "todayTimeStamp",
        "Date",
        "setHours",
        "yesTimeStamp",
        "sevenTimeStamp",
        "thirtyTimeStamp",
        "newUser",
        "oldUser",
        "addCart",
        "addOrderNum",
        "addOrderSum",
        "payOrderNum",
        "payOrderSum",
        "newData",
        "oldData",
        "id",
        "register_time",
        "select",
        "length",
        "item",
        "nickname",
        "Buffer",
        "from",
        "toString",
        "last_login_time",
        "add_time",
        "sum",
        "unix",
        "format"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\admin\\controller\\index.js",
    "sourcesContent": [
        "const Base = require('./base.js');\r\nconst moment = require('moment');\r\n\r\nmodule.exports = class extends Base {\r\n    async indexAction() {\r\n        const goodsOnsale = await this.model('goods').where({is_on_sale: 1,is_delete:0}).count();\r\n        const orderToDelivery = await this.model('order').where({order_status: 300}).count();\r\n        const user = await this.model('user').count();\r\n        let data = await this.model('settings').field('countdown').find();\r\n        let timestamp = data.countdown;\r\n        let info = {\r\n            user: user,\r\n            goodsOnsale: goodsOnsale,\r\n            timestamp:timestamp,\r\n            orderToDelivery: orderToDelivery,\r\n        }\r\n        return this.success(info);\r\n    }\r\n    async getQiniuTokenAction(){\r\n        const TokenSerivce = this.service('qiniu'); // 服务里返回token\r\n        let data = await TokenSerivce.getQiniuToken(); // 取得token值 goods\r\n        let qiniuToken = data.uploadToken;\r\n        let domain = data.domain;\r\n        let info ={\r\n            token:qiniuToken,\r\n            url:domain\r\n        };\r\n        return this.success(info);\r\n    }\r\n    async mainAction() {\r\n        const index = this.get('pindex');\r\n        console.log('index:' + index);\r\n        let todayTimeStamp = new Date(new Date().setHours(0, 0, 0, 0)) / 1000; //今天零点的时间戳\r\n        let yesTimeStamp = todayTimeStamp - 86400; //昨天零点的时间戳\r\n        let sevenTimeStamp = todayTimeStamp - 86400 * 7; //7天前零点的时间戳\r\n        let thirtyTimeStamp = todayTimeStamp - 86400 * 30; //30天前零点的时间戳\r\n        let newUser = 1;\r\n        let oldUser = 0;\r\n        let addCart = 0;\r\n        let addOrderNum = 0;\r\n        let addOrderSum = 0;\r\n        let payOrderNum = 0;\r\n        let payOrderSum = 0;\r\n        let newData = [];\r\n        let oldData = [];\r\n        if (index == 0) {\r\n            newData = await this.model('user').where({\r\n                id: ['>', 0],\r\n                register_time: ['>', todayTimeStamp]\r\n            }).select();\r\n            newUser = newData.length;\r\n            for(const item of newData){\r\n                item.nickname = Buffer.from(item.nickname, 'base64').toString();\r\n            }\r\n            oldData = await this.model('user').where({\r\n                id: ['>', 0],\r\n                register_time: ['<', todayTimeStamp],\r\n                last_login_time: ['>', todayTimeStamp]\r\n            }).select();\r\n            for(const item of oldData){\r\n                item.nickname = Buffer.from(item.nickname, 'base64').toString();\r\n            }\r\n            oldUser = oldData.length;\r\n            addCart = await this.model('cart').where({is_delete: 0, add_time: ['>', todayTimeStamp]}).count();\r\n            addOrderNum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['>', todayTimeStamp]\r\n            }).count();\r\n            addOrderSum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['>', todayTimeStamp]\r\n            }).sum('actual_price');\r\n            payOrderNum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['>', todayTimeStamp],\r\n                order_status: ['IN', [201, 802, 300, 301]]\r\n            }).count();\r\n            payOrderSum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['>', todayTimeStamp],\r\n                order_status: ['IN', [201, 802, 300, 301]]\r\n            }).sum('actual_price');\r\n        }\r\n        else if (index == 1) {\r\n            newData = await this.model('user').where({\r\n                id: ['>', 0],\r\n                register_time: ['BETWEEN', yesTimeStamp, todayTimeStamp]\r\n            }).select();\r\n            for(const item of newData){\r\n                item.nickname = Buffer.from(item.nickname, 'base64').toString();\r\n            }\r\n            newUser = newData.length;\r\n            oldData = await this.model('user').where({\r\n                id: ['>', 0],\r\n                register_time: ['<', yesTimeStamp],\r\n                last_login_time: ['BETWEEN', yesTimeStamp, todayTimeStamp]\r\n            }).select();\r\n            for(const item of oldData){\r\n                item.nickname = Buffer.from(item.nickname, 'base64').toString();\r\n            }\r\n            oldUser = oldData.length;\r\n            addCart = await this.model('cart').where({\r\n                is_delete: 0,\r\n                add_time: ['BETWEEN', yesTimeStamp, todayTimeStamp]\r\n            }).count();\r\n            addOrderNum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['BETWEEN', yesTimeStamp, todayTimeStamp]\r\n            }).count();\r\n            addOrderSum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['BETWEEN', yesTimeStamp, todayTimeStamp]\r\n            }).sum('actual_price');\r\n            payOrderNum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['BETWEEN', yesTimeStamp, todayTimeStamp],\r\n                order_status: ['IN', [201, 802, 300, 301]]\r\n            }).count();\r\n            console.log('------------321----------');\r\n            console.log(payOrderNum);\r\n            console.log('-----------3321-----------');\r\n            payOrderSum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['BETWEEN', yesTimeStamp, todayTimeStamp],\r\n                order_status: ['IN', [201, 802, 300, 301]]\r\n            }).sum('actual_price');\r\n            console.log('-----------123-----------');\r\n            console.log(payOrderSum);\r\n            console.log('-----------123-----------');\r\n\r\n        }\r\n        else if (index == 2) {\r\n            newData = await this.model('user').where({\r\n                id: ['>', 0],\r\n                register_time: ['>', sevenTimeStamp]\r\n            }).select();\r\n            for(const item of newData){\r\n                item.nickname = Buffer.from(item.nickname, 'base64').toString();\r\n            }\r\n            newUser = newData.length;\r\n            oldData = await this.model('user').where({\r\n                id: ['>', 0],\r\n                register_time: ['<', sevenTimeStamp],\r\n                last_login_time: ['>', sevenTimeStamp]\r\n            }).select();\r\n            for(const item of oldData){\r\n                item.nickname = Buffer.from(item.nickname, 'base64').toString();\r\n            }\r\n            oldUser = oldData.length;\r\n            addCart = await this.model('cart').where({\r\n                is_delete: 0,\r\n                add_time: ['>', sevenTimeStamp]\r\n            }).count();\r\n            addOrderNum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['>', sevenTimeStamp]\r\n            }).count();\r\n            addOrderSum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['>', sevenTimeStamp]\r\n            }).sum('actual_price');\r\n            payOrderNum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['>', sevenTimeStamp],\r\n                order_status: ['IN', [201, 802, 300, 301]]\r\n            }).count();\r\n            payOrderSum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['>', sevenTimeStamp],\r\n                order_status: ['IN', [201, 802, 300, 301]]\r\n            }).sum('actual_price');\r\n        }\r\n        else if (index == 3) {\r\n            newData = await this.model('user').where({\r\n                id: ['>', 0],\r\n                register_time: ['>', thirtyTimeStamp]\r\n            }).select();\r\n            for(const item of newData){\r\n                item.nickname = Buffer.from(item.nickname, 'base64').toString();\r\n            }\r\n            newUser = newData.length;\r\n            oldData = await this.model('user').where({\r\n                id: ['>', 0],\r\n                register_time: ['<', thirtyTimeStamp],\r\n                last_login_time: ['>', thirtyTimeStamp]\r\n            }).select();\r\n            for(const item of oldData){\r\n                item.nickname = Buffer.from(item.nickname, 'base64').toString();\r\n            }\r\n            oldUser = oldData.length;\r\n            addCart = await this.model('cart').where({\r\n                is_delete: 0,\r\n                add_time: ['>', thirtyTimeStamp]\r\n            }).count();\r\n            addOrderNum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['>', thirtyTimeStamp]\r\n            }).count();\r\n            addOrderSum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['>', thirtyTimeStamp]\r\n            }).sum('actual_price');\r\n            payOrderNum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['>', thirtyTimeStamp],\r\n                order_status: ['IN', [201, 802, 300, 301]]\r\n            }).count();\r\n            payOrderSum = await this.model('order').where({\r\n                is_delete: 0,\r\n                add_time: ['>', thirtyTimeStamp],\r\n                order_status: ['IN', [201, 802, 300, 301]]\r\n            }).sum('actual_price');\r\n        }\r\n        if (addOrderSum == null) {\r\n            addOrderSum = 0;\r\n        }\r\n        if (payOrderSum == null) {\r\n            payOrderSum = 0;\r\n        }\r\n        if(newData.length > 0){\r\n            for(const item of newData){\r\n                item.register_time =  moment.unix(item.register_time).format('YYYY-MM-DD HH:mm:ss');\r\n                item.last_login_time =  moment.unix(item.last_login_time).format('YYYY-MM-DD HH:mm:ss');\r\n            }\r\n        }\r\n\r\n        if(oldData.length > 0){\r\n            for(const item of oldData){\r\n                item.register_time =  moment.unix(item.register_time).format('YYYY-MM-DD HH:mm:ss');\r\n                item.last_login_time =  moment.unix(item.last_login_time).format('YYYY-MM-DD HH:mm:ss');\r\n            }\r\n        }\r\n\r\n        let info = {\r\n            newUser: newUser,\r\n            oldUser: oldUser,\r\n            addCart: addCart,\r\n            newData: newData,\r\n            oldData: oldData,\r\n            addOrderNum: addOrderNum,\r\n            addOrderSum: addOrderSum,\r\n            payOrderNum: payOrderNum,\r\n            payOrderSum: payOrderSum\r\n        }\r\n        return this.success(info);\r\n    }\r\n\r\n\r\n};\r\n"
    ]
}