{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\ad.js"
    ],
    "names": [
        "Base",
        "require",
        "moment",
        "module",
        "exports",
        "indexAction",
        "page",
        "get",
        "size",
        "model",
        "data",
        "where",
        "is_delete",
        "order",
        "countSelect",
        "item",
        "end_time",
        "unix",
        "format",
        "enabled",
        "success",
        "updateSortAction",
        "id",
        "post",
        "sort",
        "update",
        "sort_order",
        "infoAction",
        "find",
        "storeAction",
        "isPost",
        "values",
        "console",
        "log",
        "parseInt",
        "Date",
        "getTime",
        "ex",
        "goods_id",
        "think",
        "isEmpty",
        "link_type",
        "link",
        "add",
        "fail",
        "getallrelateAction",
        "is_on_sale",
        "field",
        "select",
        "destoryAction",
        "limit",
        "deleteAdImageAction",
        "image_url",
        "saleStatusAction",
        "status",
        "sale"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\admin\\controller\\ad.js",
    "sourcesContent": [
        "const Base = require('./base.js');\r\nconst moment = require('moment');\r\nmodule.exports = class extends Base {\r\n    /**\r\n     * index action\r\n     * @return {Promise} []\r\n     */\r\n    async indexAction() {\r\n        const page = this.get('page') || 1;\r\n        const size = this.get('size') || 10;\r\n        const model = this.model('ad');\r\n        const data = await model.where({\r\n            is_delete: 0\r\n        }).order(['id ASC']).page(page, size).countSelect();\r\n        for (const item of data.data) {\r\n            if (item.end_time != 0) {\r\n                item.end_time = moment.unix(item.end_time).format('YYYY-MM-DD HH:mm:ss');\r\n            }\r\n            if (item.enabled == 1) {\r\n                item.enabled = true;\r\n            } else {\r\n                item.enabled = false;\r\n            }\r\n        }\r\n        return this.success(data);\r\n    }\r\n    async updateSortAction() {\r\n        const id = this.post('id');\r\n        const sort = this.post('sort');\r\n        const model = this.model('ad');\r\n        const data = await model.where({\r\n            id: id\r\n        }).update({\r\n            sort_order: sort\r\n        });\r\n        return this.success(data);\r\n    }\r\n    async infoAction() {\r\n        const id = this.get('id');\r\n        const model = this.model('ad');\r\n        const data = await model.where({\r\n            id: id\r\n        }).find();\r\n        return this.success(data);\r\n    }\r\n    async storeAction() {\r\n        if (!this.isPost) {\r\n            return false;\r\n        }\r\n        const values = this.post();\r\n        console.log(values);\r\n        values.end_time = parseInt(new Date(values.end_time).getTime() / 1000);\r\n        const id = this.post('id');\r\n        const model = this.model('ad');\r\n        if (id > 0) {\r\n            await model.where({\r\n                id: id\r\n            }).update(values);\r\n        } else {\r\n            let ex = await model.where({\r\n                goods_id: values.goods_id,\r\n                is_delete:0\r\n            }).find();\r\n            if (think.isEmpty(ex)) {\r\n                delete values.id;\r\n                if (values.link_type == 0) {\r\n                    values.link = '';\r\n                } else {\r\n                    values.goods_id = 0;\r\n                }\r\n                await model.add(values);\r\n            } else {\r\n                return this.fail(100, '发生错误');\r\n            }\r\n        }\r\n        return this.success(values);\r\n    }\r\n    async getallrelateAction() {\r\n        let data = await this.model('goods').where({\r\n            is_on_sale: 1,\r\n            is_delete: 0\r\n        }).field('id,name,list_pic_url').select();\r\n        return this.success(data);\r\n    }\r\n    async destoryAction() {\r\n        const id = this.post('id');\r\n        await this.model('ad').where({\r\n            id: id\r\n        }).limit(1).update({\r\n            is_delete: 1\r\n        });\r\n        // TODO 删除图片\r\n        return this.success();\r\n    }\r\n    async deleteAdImageAction(){\r\n        let id = this.post('id');\r\n        await this.model('ad').where({\r\n            id:id\r\n        }).update({\r\n            image_url:''\r\n        });\r\n        return this.success();\r\n    }\r\n    async saleStatusAction() {\r\n        const id = this.get('id');\r\n        const status = this.get('status');\r\n        let sale = 0;\r\n        if (status == 'true') {\r\n            sale = 1;\r\n        }\r\n        const model = this.model('ad');\r\n        await model.where({\r\n            id: id\r\n        }).update({\r\n            enabled: sale\r\n        });\r\n    }\r\n};"
    ]
}