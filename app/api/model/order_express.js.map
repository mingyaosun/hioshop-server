{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\api\\model\\order_express.js"
    ],
    "names": [
        "module",
        "exports",
        "think",
        "Model",
        "tableName",
        "tablePrefix",
        "getLatestOrderExpress",
        "orderId",
        "returnExpressInfo",
        "shipper_code",
        "shipper_name",
        "logistic_code",
        "is_finish",
        "request_time",
        "traces",
        "orderExpress",
        "where",
        "order_id",
        "find",
        "isEmpty",
        "datetime",
        "JSON",
        "parse",
        "ExpressSerivce",
        "service",
        "latestExpressInfo",
        "queryExpress",
        "nowTime",
        "Number",
        "parseInt",
        "Date",
        "now",
        "updateData",
        "update_time",
        "request_count",
        "success",
        "isFinish",
        "stringify",
        "id",
        "update"
    ],
    "mappings": ";;AAAAA,OAAOC,OAAP,GAAiB,cAAcC,MAAMC,KAApB,CAA0B;AACvC,QAAIC,SAAJ,GAAgB;AACZ,eAAO,KAAKC,WAAL,GAAmB,eAA1B;AACH;AACD;;;;;AAKMC,yBAAN,CAA4BC,OAA5B,EAAqC;AAAA;;AAAA;AACjC,kBAAMC,oBAAoB;AACtBC,8BAAc,EADQ;AAEtBC,8BAAc,EAFQ;AAGtBC,+BAAe,EAHO;AAItBC,2BAAW,CAJW;AAKtBC,8BAAc,CALQ;AAMtBC,wBAAQ;AANc,aAA1B;AAQA,kBAAMC,eAAe,MAAM,MAAKC,KAAL,CAAW;AAClCC,0BAAUV;AADwB,aAAX,EAExBW,IAFwB,EAA3B,CATiC,CAWtB;AACX,gBAAIhB,MAAMiB,OAAN,CAAcJ,YAAd,CAAJ,EAAiC;AAAE;AAC/B,uBAAOP,iBAAP;AACH;AACD,gBAAIN,MAAMiB,OAAN,CAAcJ,aAAaN,YAA3B,KAA4CP,MAAMiB,OAAN,CAAcJ,aAAaJ,aAA3B,CAAhD,EAA2F;AACvF,uBAAOH,iBAAP,CADuF,CAC7D;AAC7B;AACD;AACAA,8BAAkBC,YAAlB,GAAiCM,aAAaN,YAA9C;AACAD,8BAAkBE,YAAlB,GAAiCK,aAAaL,YAA9C;AACAF,8BAAkBG,aAAlB,GAAkCI,aAAaJ,aAA/C;AACAH,8BAAkBI,SAAlB,GAA8BG,aAAaH,SAA3C;AACAJ,8BAAkBK,YAAlB,GAAiCX,MAAMkB,QAAN,CAAeL,aAAaF,YAAb,GAA4B,IAA3C,CAAjC;AACAL,8BAAkBM,MAAlB,GAA2BZ,MAAMiB,OAAN,CAAcJ,aAAaD,MAA3B,IAAqC,EAArC,GAA0CO,KAAKC,KAAL,CAAWP,aAAaD,MAAxB,CAArE;AACA;AACA,gBAAIC,aAAaH,SAAjB,EAA4B;AACxB,uBAAOJ,iBAAP;AACH;AACD;AACA,kBAAMe,iBAAiBrB,MAAMsB,OAAN,CAAc,SAAd,EAAyB,KAAzB,CAAvB,CA9BiC,CA8BuB;AACxD;AACA,kBAAMC,oBAAoB,MAAMF,eAAeG,YAAf,CAA4BX,aAAaN,YAAzC,EAAuDM,aAAaJ,aAApE,CAAhC;AACA,kBAAMgB,UAAUC,OAAOC,QAAP,CAAgBC,KAAKC,GAAL,KAAa,IAA7B,CAAhB;AACA,kBAAMC,aAAa;AACfnB,8BAAcc,OADC;AAEfM,6BAAaN,OAFE;AAGfO,+BAAe,CAAC,KAAD,EAAQ,iBAAR;AAHA,aAAnB;AAKA,gBAAIT,kBAAkBU,OAAtB,EAA+B;AAC3B3B,kCAAkBM,MAAlB,GAA2BW,kBAAkBX,MAA7C;AACAN,kCAAkBI,SAAlB,GAA8Ba,kBAAkBW,QAAhD;AACA;AACAJ,2BAAWlB,MAAX,GAAoBO,KAAKgB,SAAL,CAAeZ,kBAAkBX,MAAjC,CAApB;AACAN,kCAAkBK,YAAlB,GAAiCX,MAAMkB,QAAN,CAAeO,UAAU,IAAzB,CAAjC;AACAK,2BAAWpB,SAAX,GAAuBa,kBAAkBW,QAAzC;AACH;AACD,kBAAM,MAAKpB,KAAL,CAAW;AACbsB,oBAAIvB,aAAauB;AADJ,aAAX,EAEHC,MAFG,CAEIP,UAFJ,CAAN;AAGA,mBAAOxB,iBAAP;AAlDiC;AAmDpC;AA5DsC,CAA3C",
    "file": "..\\..\\..\\src\\api\\model\\order_express.js",
    "sourcesContent": [
        "module.exports = class extends think.Model {\r\n    get tableName() {\r\n        return this.tablePrefix + 'order_express';\r\n    }\r\n    /**\r\n     * 获取最新的订单物流信息\r\n     * @param orderId\r\n     * @returns {Promise.<*>}\r\n     */\r\n    async getLatestOrderExpress(orderId) {\r\n        const returnExpressInfo = {\r\n            shipper_code: '',\r\n            shipper_name: '',\r\n            logistic_code: '',\r\n            is_finish: 0,\r\n            request_time: 0,\r\n            traces: []\r\n        };\r\n        const orderExpress = await this.where({\r\n            order_id: orderId\r\n        }).find(); // 根据orderid得到order_express的info\r\n        if (think.isEmpty(orderExpress)) { // 如果是空的，说明还没发货\r\n            return returnExpressInfo;\r\n        }\r\n        if (think.isEmpty(orderExpress.shipper_code) || think.isEmpty(orderExpress.logistic_code)) {\r\n            return returnExpressInfo; // 如果是空的，说明还没发货\r\n        }\r\n        // 如果不空，则将里面的登录的快递号等信息复制给returnExpressInfo\r\n        returnExpressInfo.shipper_code = orderExpress.shipper_code;\r\n        returnExpressInfo.shipper_name = orderExpress.shipper_name;\r\n        returnExpressInfo.logistic_code = orderExpress.logistic_code;\r\n        returnExpressInfo.is_finish = orderExpress.is_finish;\r\n        returnExpressInfo.request_time = think.datetime(orderExpress.request_time * 1000);\r\n        returnExpressInfo.traces = think.isEmpty(orderExpress.traces) ? [] : JSON.parse(orderExpress.traces);\r\n        // 如果物流配送已完成，直接返回\r\n        if (orderExpress.is_finish) {\r\n            return returnExpressInfo;\r\n        }\r\n        // 查询最新物流信息\r\n        const ExpressSerivce = think.service('express', 'api'); // 引入api\r\n        // 调用api里的queryExpress方法 最重要\r\n        const latestExpressInfo = await ExpressSerivce.queryExpress(orderExpress.shipper_code, orderExpress.logistic_code);\r\n        const nowTime = Number.parseInt(Date.now() / 1000);\r\n        const updateData = {\r\n            request_time: nowTime,\r\n            update_time: nowTime,\r\n            request_count: ['EXP', 'request_count+1']\r\n        };\r\n        if (latestExpressInfo.success) {\r\n            returnExpressInfo.traces = latestExpressInfo.traces;\r\n            returnExpressInfo.is_finish = latestExpressInfo.isFinish;\r\n            // 查询成功则更新订单物流信息\r\n            updateData.traces = JSON.stringify(latestExpressInfo.traces);\r\n            returnExpressInfo.request_time = think.datetime(nowTime * 1000);\r\n            updateData.is_finish = latestExpressInfo.isFinish;\r\n        }\r\n        await this.where({\r\n            id: orderExpress.id\r\n        }).update(updateData);\r\n        return returnExpressInfo;\r\n    }\r\n};"
    ]
}