{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\api\\controller\\cart.js"
    ],
    "names": [
        "Base",
        "require",
        "moment",
        "pinyin",
        "module",
        "exports",
        "getCart",
        "type",
        "cartList",
        "model",
        "where",
        "user_id",
        "think",
        "userId",
        "is_delete",
        "is_fast",
        "select",
        "goodsCount",
        "goodsAmount",
        "checkedGoodsCount",
        "checkedGoodsAmount",
        "numberChange",
        "cartItem",
        "product",
        "id",
        "product_id",
        "find",
        "isEmpty",
        "update",
        "retail_price",
        "productNum",
        "goods_number",
        "is_on_sale",
        "checked",
        "number",
        "Number",
        "info",
        "goods_id",
        "field",
        "list_pic_url",
        "weight_count",
        "goods_weight",
        "add_price",
        "cAmount",
        "toFixed",
        "aAmount",
        "cartTotal",
        "indexAction",
        "success",
        "addAgain",
        "goodsId",
        "productId",
        "currentTime",
        "parseInt",
        "Date",
        "getTime",
        "goodsInfo",
        "fail",
        "productInfo",
        "cartInfo",
        "goodsSepcifitionValue",
        "goods_specification_ids",
        "split",
        "getField",
        "cartData",
        "goods_sn",
        "goods_name",
        "name",
        "goods_aka",
        "freight_template_id",
        "goods_specifition_name_value",
        "join",
        "goods_specifition_ids",
        "add_time",
        "add",
        "addAction",
        "post",
        "addType",
        "increment",
        "updateAction",
        "checkedAction",
        "toString",
        "isChecked",
        "deleteAction",
        "goodsCountAction",
        "checkoutAction",
        "orderFrom",
        "get",
        "addressId",
        "goodsMoney",
        "freightPrice",
        "outStock",
        "getAgainCart",
        "checkedGoodsList",
        "filter",
        "v",
        "item",
        "againGoods",
        "order_id",
        "againGoodsCount",
        "checkedAddress",
        "is_default",
        "province_id",
        "cartGoods",
        "freightTempArray",
        "freightData",
        "money",
        "freight_type",
        "province_name",
        "getRegionName",
        "city_name",
        "city_id",
        "district_name",
        "district_id",
        "full_region",
        "ex",
        "template_id",
        "area",
        "freight_price",
        "groupData",
        "group_id",
        "free_by_number",
        "free_by_money",
        "templateInfo",
        "start",
        "start_fee",
        "add_fee",
        "goodsTotalPrice",
        "orderTotalPrice",
        "def",
        "actualPrice",
        "num"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\api\\controller\\cart.js",
    "sourcesContent": [
        "const Base = require('./base.js');\r\nconst moment = require('moment');\r\nconst pinyin = require(\"pinyin\");\r\nmodule.exports = class extends Base {\r\n    async getCart(type) {\r\n        let cartList = [];\r\n        if(type == 0){\r\n            cartList = await this.model('cart').where({\r\n                user_id: think.userId,\r\n                is_delete: 0,\r\n                is_fast: 0,\r\n            }).select();\r\n        }\r\n        else{\r\n            cartList = await this.model('cart').where({\r\n                user_id: think.userId,\r\n                is_delete: 0,\r\n                is_fast: 1\r\n            }).select();\r\n        }\r\n        // 获取购物车统计信息\r\n        let goodsCount = 0;\r\n        let goodsAmount = 0;\r\n        let checkedGoodsCount = 0;\r\n        let checkedGoodsAmount = 0;\r\n        let numberChange = 0;\r\n        for (const cartItem of cartList) {\r\n            let product = await this.model('product').where({\r\n                id: cartItem.product_id,\r\n                is_delete: 0\r\n            }).find();\r\n            if (think.isEmpty(product)) {\r\n                await this.model('cart').where({\r\n                    product_id: cartItem.product_id,\r\n                    user_id: think.userId,\r\n                    is_delete: 0,\r\n                }).update({\r\n                    is_delete: 1\r\n                });\r\n            } else {\r\n                let retail_price = product.retail_price;\r\n                let productNum = product.goods_number;\r\n\t\t\t\t// 4.14 更新\r\n                if (productNum <= 0 || product.is_on_sale == 0) {\r\n                    await this.model('cart').where({\r\n                        product_id: cartItem.product_id,\r\n                        user_id: think.userId,\r\n                        checked: 1,\r\n                        is_delete: 0,\r\n                    }).update({\r\n                        checked: 0\r\n                    });\r\n                    cartItem.number = 0;\r\n                } else if (productNum > 0 && productNum < cartItem.number) {\r\n                    cartItem.number = productNum;\r\n                    numberChange = 1;\r\n                } else if (productNum > 0 && cartItem.number == 0) {\r\n                    cartItem.number = 1;\r\n                    numberChange = 1;\r\n                }\r\n                goodsCount += cartItem.number;\r\n                goodsAmount += cartItem.number * retail_price;\r\n                cartItem.retail_price = retail_price;\r\n                if (!think.isEmpty(cartItem.checked && productNum > 0)) {\r\n                    checkedGoodsCount += cartItem.number;\r\n                    checkedGoodsAmount += cartItem.number * Number(retail_price);\r\n                }\r\n                // 查找商品的图片\r\n                let info = await this.model('goods').where({\r\n                    id: cartItem.goods_id\r\n                }).field('list_pic_url').find();\r\n                cartItem.list_pic_url = info.list_pic_url;\r\n                cartItem.weight_count = cartItem.number * Number(cartItem.goods_weight);\r\n                await this.model('cart').where({\r\n                    product_id: cartItem.product_id,\r\n                    user_id: think.userId,\r\n                    is_delete: 0,\r\n                }).update({\r\n                    number: cartItem.number,\r\n                    add_price:retail_price\r\n                })\r\n            }\r\n        }\r\n        let cAmount = checkedGoodsAmount.toFixed(2);\r\n        let aAmount = checkedGoodsAmount;\r\n        return {\r\n            cartList: cartList,\r\n            cartTotal: {\r\n                goodsCount: goodsCount,\r\n                goodsAmount: goodsAmount.toFixed(2),\r\n                checkedGoodsCount: checkedGoodsCount,\r\n                checkedGoodsAmount: cAmount,\r\n                user_id: think.userId,\r\n                numberChange: numberChange\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * 获取购物车信息，所有对购物车的增删改操作，都要重新返回购物车的信息\r\n     * @return {Promise} []\r\n     */\r\n    async indexAction() {\r\n        return this.success(await this.getCart(0));\r\n    }\r\n    async addAgain(goodsId, productId, number) {\r\n        const currentTime = parseInt(new Date().getTime() / 1000);\r\n        const goodsInfo = await this.model('goods').where({\r\n            id: goodsId\r\n        }).find();\r\n        if (think.isEmpty(goodsInfo) || goodsInfo.is_on_sale == 0) {\r\n            return this.fail(400, '商品已下架');\r\n        }\r\n        // 取得规格的信息,判断规格库存\r\n        // const productInfo = await this.model('product').where({goods_id: goodsId, id: productId}).find();\r\n        const productInfo = await this.model('product').where({\r\n            id: productId\r\n        }).find();\r\n        // let productId = productInfo.id;\r\n        if (think.isEmpty(productInfo) || productInfo.goods_number < number) {\r\n            return this.fail(400, '库存不足');\r\n        }\r\n        // 判断购物车中是否存在此规格商品\r\n        const cartInfo = await this.model('cart').where({\r\n            user_id: think.userId,\r\n            product_id: productId,\r\n            is_delete: 0\r\n        }).find();\r\n        let retail_price = productInfo.retail_price;\r\n        if (think.isEmpty(cartInfo)) {\r\n            // 添加操作\r\n            // 添加规格名和值\r\n            let goodsSepcifitionValue = [];\r\n            if (!think.isEmpty(productInfo.goods_specification_ids)) {\r\n                goodsSepcifitionValue = await this.model('goods_specification').where({\r\n                    goods_id: productInfo.goods_id,\r\n                    is_delete: 0,\r\n                    id: {\r\n                        'in': productInfo.goods_specification_ids.split('_')\r\n                    }\r\n                }).getField('value');\r\n            }\r\n            // 添加到购物车\r\n            const cartData = {\r\n                goods_id: productInfo.goods_id,\r\n                product_id: productId,\r\n                goods_sn: productInfo.goods_sn,\r\n                goods_name: goodsInfo.name,\r\n                goods_aka: productInfo.goods_name,\r\n                goods_weight: productInfo.goods_weight,\r\n                freight_template_id: goodsInfo.freight_template_id,\r\n                list_pic_url: goodsInfo.list_pic_url,\r\n                number: number,\r\n                user_id: think.userId,\r\n                retail_price: retail_price,\r\n                add_price: retail_price,\r\n                goods_specifition_name_value: goodsSepcifitionValue.join(';'),\r\n                goods_specifition_ids: productInfo.goods_specification_ids,\r\n                checked: 1,\r\n                add_time: currentTime\r\n            };\r\n            await this.model('cart').add(cartData);\r\n        } else {\r\n            // 如果已经存在购物车中，则数量增加\r\n            if (productInfo.goods_number < (number + cartInfo.number)) {\r\n                return this.fail(400, '库存都不够啦');\r\n            }\r\n            await this.model('cart').where({\r\n                user_id: think.userId,\r\n                product_id: productId,\r\n                is_delete: 0,\r\n                id: cartInfo.id\r\n            }).update({\r\n                retail_price: retail_price,\r\n                checked: 1,\r\n                number: number\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * 添加商品到购物车\r\n     * @returns {Promise.<*>}\r\n     */\r\n    async addAction() {\r\n        const goodsId = this.post('goodsId');\r\n        const productId = this.post('productId');\r\n        const number = this.post('number');\r\n        const addType = this.post('addType');\r\n        const currentTime = parseInt(new Date().getTime() / 1000);\r\n        // 判断商品是否可以购买\r\n        const goodsInfo = await this.model('goods').where({\r\n            id: goodsId\r\n        }).find();\r\n        if (think.isEmpty(goodsInfo) || goodsInfo.is_on_sale == 0) {\r\n            return this.fail(400, '商品已下架');\r\n        }\r\n        // 取得规格的信息,判断规格库存\r\n        // const productInfo = await this.model('product').where({goods_id: goodsId, id: productId}).find();\r\n        const productInfo = await this.model('product').where({\r\n            id: productId\r\n        }).find();\r\n        // let productId = productInfo.id;\r\n        if (think.isEmpty(productInfo) || productInfo.goods_number < number) {\r\n            return this.fail(400, '库存不足');\r\n        }\r\n        // 判断购物车中是否存在此规格商品\r\n        const cartInfo = await this.model('cart').where({\r\n            user_id: think.userId,\r\n            product_id: productId,\r\n            is_delete: 0\r\n        }).find();\r\n        let retail_price = productInfo.retail_price;\r\n        if (addType == 1) {\r\n            await this.model('cart').where({\r\n                is_delete: 0,\r\n                user_id: think.userId\r\n            }).update({\r\n                checked: 0\r\n            });\r\n            let goodsSepcifitionValue = [];\r\n            if (!think.isEmpty(productInfo.goods_specification_ids)) {\r\n                goodsSepcifitionValue = await this.model('goods_specification').where({\r\n                    goods_id: productInfo.goods_id,\r\n                    is_delete: 0,\r\n                    id: {\r\n                        'in': productInfo.goods_specification_ids.split('_')\r\n                    }\r\n                }).getField('value');\r\n            }\r\n            // 添加到购物车\r\n            const cartData = {\r\n                goods_id: productInfo.goods_id,\r\n                product_id: productId,\r\n                goods_sn: productInfo.goods_sn,\r\n                goods_name: goodsInfo.name,\r\n                goods_aka: productInfo.goods_name,\r\n                goods_weight: productInfo.goods_weight,\r\n                freight_template_id: goodsInfo.freight_template_id,\r\n                list_pic_url: goodsInfo.list_pic_url,\r\n                number: number,\r\n                user_id: think.userId,\r\n                retail_price: retail_price,\r\n                add_price: retail_price,\r\n                goods_specifition_name_value: goodsSepcifitionValue.join(';'),\r\n                goods_specifition_ids: productInfo.goods_specification_ids,\r\n                checked: 1,\r\n                add_time: currentTime,\r\n                is_fast: 1\r\n            };\r\n            await this.model('cart').add(cartData);\r\n            return this.success(await this.getCart(1));\r\n        } else {\r\n            if (think.isEmpty(cartInfo)) {\r\n                // 添加操作\r\n                // 添加规格名和值\r\n                let goodsSepcifitionValue = [];\r\n                if (!think.isEmpty(productInfo.goods_specification_ids)) {\r\n                    goodsSepcifitionValue = await this.model('goods_specification').where({\r\n                        goods_id: productInfo.goods_id,\r\n                        is_delete: 0,\r\n                        id: {\r\n                            'in': productInfo.goods_specification_ids.split('_')\r\n                        }\r\n                    }).getField('value');\r\n                }\r\n                // 添加到购物车\r\n                const cartData = {\r\n                    goods_id: productInfo.goods_id,\r\n                    product_id: productId,\r\n                    goods_sn: productInfo.goods_sn,\r\n                    goods_name: goodsInfo.name,\r\n                    goods_aka: productInfo.goods_name,\r\n                    goods_weight: productInfo.goods_weight,\r\n                    freight_template_id: goodsInfo.freight_template_id,\r\n                    list_pic_url: goodsInfo.list_pic_url,\r\n                    number: number,\r\n                    user_id: think.userId,\r\n                    retail_price: retail_price,\r\n                    add_price: retail_price,\r\n                    goods_specifition_name_value: goodsSepcifitionValue.join(';'),\r\n                    goods_specifition_ids: productInfo.goods_specification_ids,\r\n                    checked: 1,\r\n                    add_time: currentTime\r\n                };\r\n                await this.model('cart').add(cartData);\r\n            } else {\r\n                // 如果已经存在购物车中，则数量增加\r\n                if (productInfo.goods_number < (number + cartInfo.number)) {\r\n                    return this.fail(400, '库存都不够啦');\r\n                }\r\n                await this.model('cart').where({\r\n                    user_id: think.userId,\r\n                    product_id: productId,\r\n                    is_delete: 0,\r\n                    id: cartInfo.id\r\n                }).update({\r\n                    retail_price: retail_price\r\n                });\r\n                await this.model('cart').where({\r\n                    user_id: think.userId,\r\n                    product_id: productId,\r\n                    is_delete: 0,\r\n                    id: cartInfo.id\r\n                }).increment('number', number);\r\n            }\r\n            return this.success(await this.getCart(0));\r\n        }\r\n    }\r\n    // 更新指定的购物车信息\r\n    async updateAction() {\r\n        const productId = this.post('productId'); // 新的product_id\r\n        const id = this.post('id'); // cart.id\r\n        const number = parseInt(this.post('number')); // 不是\r\n        // 取得规格的信息,判断规格库存\r\n        const productInfo = await this.model('product').where({\r\n            id: productId,\r\n            is_delete: 0,\r\n        }).find();\r\n        if (think.isEmpty(productInfo) || productInfo.goods_number < number) {\r\n            return this.fail(400, '库存不足');\r\n        }\r\n        // 判断是否已经存在product_id购物车商品\r\n        const cartInfo = await this.model('cart').where({\r\n            id: id,\r\n            is_delete: 0\r\n        }).find();\r\n        // 只是更新number\r\n        if (cartInfo.product_id === productId) {\r\n            await this.model('cart').where({\r\n                id: id,\r\n                is_delete: 0\r\n            }).update({\r\n                number: number\r\n            });\r\n            return this.success(await this.getCart(0));\r\n        }\r\n    }\r\n    // 是否选择商品，如果已经选择，则取消选择，批量操作\r\n    async checkedAction() {\r\n        let productId = this.post('productIds').toString();\r\n        const isChecked = this.post('isChecked');\r\n        if (think.isEmpty(productId)) {\r\n            return this.fail('删除出错');\r\n        }\r\n        productId = productId.split(',');\r\n        await this.model('cart').where({\r\n            product_id: {\r\n                'in': productId\r\n            },\r\n            user_id: think.userId,\r\n            is_delete: 0\r\n        }).update({\r\n            checked: parseInt(isChecked)\r\n        });\r\n        return this.success(await this.getCart(0));\r\n    }\r\n    // 删除选中的购物车商品，批量删除\r\n    async deleteAction() {\r\n        let productId = this.post('productIds');\r\n        if (think.isEmpty(productId)) {\r\n            return this.fail('删除出错');\r\n        }\r\n        await this.model('cart').where({\r\n            product_id: productId,\r\n            user_id: think.userId,\r\n            is_delete: 0\r\n        }).update({\r\n            is_delete: 1\r\n        });\r\n        return this.success(await this.getCart(0));\r\n        // return this.success(productId);\r\n    }\r\n    // 获取购物车商品的总件件数\r\n    async goodsCountAction() {\r\n        const cartData = await this.getCart(0);\r\n        await this.model('cart').where({\r\n            user_id: think.userId,\r\n            is_delete: 0,\r\n            is_fast: 1\r\n        }).update({\r\n            is_delete: 1\r\n        });\r\n        return this.success({\r\n            cartTotal: {\r\n                goodsCount: cartData.cartTotal.goodsCount\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 订单提交前的检验和填写相关订单信息\r\n     * @returns {Promise.<void>}\r\n     */\r\n    async checkoutAction() {\r\n        const currentTime = parseInt(new Date().getTime() / 1000);\r\n        let orderFrom = this.get('orderFrom');\r\n        const type = this.get('type'); // 是否团购\r\n        const addressId = this.get('addressId'); // 收货地址id\r\n        const addType = this.get('addType');\r\n        let goodsCount = 0; // 购物车的数量\r\n        let goodsMoney = 0; // 购物车的总价\r\n        let freightPrice = 0;\r\n        let outStock = 0;\r\n        let cartData = '';\r\n        // 获取要购买的商品\r\n        if (type == 0) {\r\n            if (addType == 0) {\r\n                cartData = await this.getCart(0);\r\n            } else if (addType == 1) {\r\n                cartData = await this.getCart(1);\r\n            } else if (addType == 2) {\r\n                cartData = await this.getAgainCart(orderFrom);\r\n            }\r\n        }\r\n        const checkedGoodsList = cartData.cartList.filter(function(v) {\r\n            return v.checked === 1;\r\n        });\r\n        for (const item of checkedGoodsList) {\r\n            goodsCount = goodsCount + item.number;\r\n            goodsMoney = goodsMoney + item.number * item.retail_price;\r\n            if (item.goods_number <= 0 || item.is_on_sale == 0) {\r\n                outStock = Number(outStock) + 1;\r\n            }\r\n        }\r\n        if (addType == 2) {\r\n            let againGoods = await this.model('order_goods').where({\r\n                order_id: orderFrom\r\n            }).select();\r\n            let againGoodsCount = 0;\r\n            for (const item of againGoods) {\r\n                againGoodsCount = againGoodsCount + item.number;\r\n            }\r\n            if (goodsCount != againGoodsCount) {\r\n                outStock = 1;\r\n            }\r\n        }\r\n        // 选择的收货地址\r\n        let checkedAddress = null;\r\n        if (addressId == '' || addressId == 0) {\r\n            checkedAddress = await this.model('address').where({\r\n                is_default: 1,\r\n                user_id: think.userId,\r\n\t\t\t\tis_delete:0\r\n            }).find();\r\n        } else {\r\n            checkedAddress = await this.model('address').where({\r\n                id: addressId,\r\n                user_id: think.userId,\r\n\t\t\t\tis_delete:0\r\n            }).find();\r\n        }\r\n        if (!think.isEmpty(checkedAddress)) {\r\n            // 运费开始\r\n            // 先将促销规则中符合满件包邮或者满金额包邮的规则找到；\r\n            // 先看看是不是属于偏远地区。\r\n            let province_id = checkedAddress.province_id;\r\n            // 得到数组了，然后去判断这两个商品符不符合要求\r\n            // 先用这个goods数组去遍历\r\n            let cartGoods = checkedGoodsList;\r\n            let freightTempArray = await this.model('freight_template').where({\r\n                is_delete: 0\r\n            }).select();\r\n            let freightData = [];\r\n            for (const item in freightTempArray) {\r\n                freightData[item] = {\r\n                    id: freightTempArray[item].id,\r\n                    number: 0,\r\n                    money: 0,\r\n                    goods_weight: 0,\r\n                    freight_type: freightTempArray[item].freight_type\r\n                }\r\n            }\r\n            // 按件计算和按重量计算的区别是：按件，只要算goods_number就可以了，按重量要goods_number*goods_weight\r\n            // checkedGoodsList = [{goods_id:1,number5},{goods_id:2,number:3},{goods_id:3,number:2}]\r\n            for (const item of freightData) {\r\n                for (const cartItem of cartGoods) {\r\n                    if (item.id == cartItem.freight_template_id) {\r\n                        // 这个在判断，购物车中的商品是否属于这个运费模版，如果是，则加一，但是，这里要先判断下，这个商品是否符合满件包邮或满金额包邮，如果是包邮的，那么要去掉\r\n                        item.number = item.number + cartItem.number;\r\n                        item.money = item.money + cartItem.number * cartItem.retail_price;\r\n                        item.goods_weight = item.goods_weight + cartItem.number * cartItem.goods_weight;\r\n                    }\r\n                }\r\n            }\r\n            checkedAddress.province_name = await this.model('region').getRegionName(checkedAddress.province_id);\r\n            checkedAddress.city_name = await this.model('region').getRegionName(checkedAddress.city_id);\r\n            checkedAddress.district_name = await this.model('region').getRegionName(checkedAddress.district_id);\r\n            checkedAddress.full_region = checkedAddress.province_name + checkedAddress.city_name + checkedAddress.district_name;\r\n            for (const item of freightData) {\r\n                if (item.number == 0) {\r\n                    continue;\r\n                }\r\n                let ex = await this.model('freight_template_detail').where({\r\n                    template_id: item.id,\r\n                    area: province_id,\r\n                    is_delete: 0,\r\n                }).find();\r\n                let freight_price = 0;\r\n                if (!think.isEmpty(ex)) {\r\n                    // console.log('第一层：非默认邮费算法');\r\n                    let groupData = await this.model('freight_template_group').where({\r\n                        id: ex.group_id\r\n                    }).find();\r\n                    // 不为空，说明有模板，那么应用模板，先去判断是否符合指定的包邮条件，不满足，那么根据type 是按件还是按重量\r\n                    let free_by_number = groupData.free_by_number;\r\n                    let free_by_money = groupData.free_by_money;\r\n                    // 4种情况，1、free_by_number > 0  2,free_by_money > 0  3,free_by_number free_by_money > 0,4都等于0\r\n                    let templateInfo = await this.model('freight_template').where({\r\n                        id: item.id,\r\n                        is_delete: 0,\r\n                    }).find();\r\n                    let freight_type = templateInfo.freight_type;\r\n                    if (freight_type == 0) {\r\n                        if (item.number > groupData.start) { // 说明大于首件了\r\n                            freight_price = groupData.start * groupData.start_fee + (item.number - 1) * groupData.add_fee; // todo 如果续件是2怎么办？？？\r\n                        } else {\r\n                            freight_price = groupData.start * groupData.start_fee;\r\n                        }\r\n                    } else if (freight_type == 1) {\r\n                        if (item.goods_weight > groupData.start) { // 说明大于首件了\r\n                            freight_price = groupData.start * groupData.start_fee + (item.goods_weight - 1) * groupData.add_fee; // todo 如果续件是2怎么办？？？\r\n                        } else {\r\n                            freight_price = groupData.start * groupData.start_fee;\r\n                        }\r\n                    }\r\n                    if (free_by_number > 0) {\r\n                        if (item.number >= free_by_number) {\r\n                            freight_price = 0;\r\n                        }\r\n                    }\r\n                    if (free_by_money > 0) {\r\n                        if (item.money >= free_by_money) {\r\n                            freight_price = 0;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // console.log('第二层：使用默认的邮费算法');\r\n                    let groupData = await this.model('freight_template_group').where({\r\n                        template_id: item.id,\r\n                        area: 0\r\n                    }).find();\r\n                    let free_by_number = groupData.free_by_number;\r\n                    let free_by_money = groupData.free_by_money;\r\n                    let templateInfo = await this.model('freight_template').where({\r\n                        id: item.id,\r\n                        is_delete: 0,\r\n                    }).find();\r\n                    let freight_type = templateInfo.freight_type;\r\n                    if (freight_type == 0) {\r\n                        if (item.number > groupData.start) { // 说明大于首件了\r\n                            freight_price = groupData.start * groupData.start_fee + (item.number - 1) * groupData.add_fee; // todo 如果续件是2怎么办？？？\r\n                        } else {\r\n                            freight_price = groupData.start * groupData.start_fee;\r\n                        }\r\n                    } else if (freight_type == 1) {\r\n                        if (item.goods_weight > groupData.start) { // 说明大于首件了\r\n                            freight_price = groupData.start * groupData.start_fee + (item.goods_weight - 1) * groupData.add_fee; // todo 如果续件是2怎么办？？？\r\n                        } else {\r\n                            freight_price = groupData.start * groupData.start_fee;\r\n                        }\r\n                    }\r\n                    if (free_by_number > 0) {\r\n                        if (item.number >= free_by_number) {\r\n                            freight_price = 0;\r\n                        }\r\n                    }\r\n                    if (free_by_money > 0) {\r\n                        if (item.money >= free_by_money) {\r\n                            freight_price = 0;\r\n                        }\r\n                    }\r\n                }\r\n\t\t\t\tfreightPrice = freightPrice > freight_price?freightPrice:freight_price\r\n                // freightPrice = freightPrice + freight_price;\r\n                // 会得到 几个数组，然后用省id去遍历在哪个数组\r\n            }\r\n        } else {\r\n            checkedAddress = 0;\r\n        }\r\n        // 计算订单的费用\r\n        let goodsTotalPrice = cartData.cartTotal.checkedGoodsAmount; // 商品总价\r\n        // 获取是否有可用红包\r\n        let money = cartData.cartTotal.checkedGoodsAmount;\r\n        let orderTotalPrice = 0;\r\n        let def = await this.model('settings').where({\r\n            id: 1\r\n        }).find();\r\n        orderTotalPrice = Number(money) + Number(freightPrice) // 订单的总价\r\n        const actualPrice = orderTotalPrice; // 减去其它支付的金额后，要实际支付的金额\r\n        let numberChange = cartData.cartTotal.numberChange;\r\n        return this.success({\r\n            checkedAddress: checkedAddress,\r\n            freightPrice: freightPrice,\r\n            checkedGoodsList: checkedGoodsList,\r\n            goodsTotalPrice: goodsTotalPrice,\r\n            orderTotalPrice: orderTotalPrice.toFixed(2),\r\n            actualPrice: actualPrice.toFixed(2),\r\n            goodsCount: goodsCount,\r\n            outStock: outStock,\r\n            numberChange: numberChange,\r\n        });\r\n    }\r\n    async getAgainCart(orderFrom) {\r\n        const againGoods = await this.model('order_goods').where({\r\n            order_id: orderFrom\r\n        }).select();\r\n        await this.model('cart').where({\r\n            is_delete: 0,\r\n            user_id: think.userId\r\n        }).update({\r\n            checked: 0\r\n        });\r\n        for (const item of againGoods) {\r\n            await this.addAgain(item.goods_id, item.product_id, item.number);\r\n        }\r\n        const cartList = await this.model('cart').where({\r\n            user_id: think.userId,\r\n            is_fast: 0,\r\n            is_delete: 0\r\n        }).select();\r\n        // 获取购物车统计信息\r\n        let goodsCount = 0;\r\n        let goodsAmount = 0;\r\n        let checkedGoodsCount = 0;\r\n        let checkedGoodsAmount = 0;\r\n        for (const cartItem of cartList) {\r\n            goodsCount += cartItem.number;\r\n            goodsAmount += cartItem.number * cartItem.retail_price;\r\n            if (!think.isEmpty(cartItem.checked)) {\r\n                checkedGoodsCount += cartItem.number;\r\n                checkedGoodsAmount += cartItem.number * Number(cartItem.retail_price);\r\n            }\r\n            // 查找商品的图片\r\n            let info = await this.model('goods').where({\r\n                id: cartItem.goods_id\r\n            }).field('list_pic_url,goods_number,goods_unit').find();\r\n            // cartItem.list_pic_url = await this.model('goods').where({id: cartItem.goods_id}).getField('list_pic_url', true);\r\n            let num = info.goods_number;\r\n            if (num <= 0) {\r\n                await this.model('cart').where({\r\n                    product_id: cartItem.product_id,\r\n                    user_id: think.userId,\r\n                    checked: 1,\r\n                    is_delete: 0,\r\n                }).update({\r\n                    checked: 0\r\n                });\r\n            }\r\n            cartItem.list_pic_url = info.list_pic_url;\r\n            cartItem.goods_number = info.goods_number;\r\n            cartItem.weight_count = cartItem.number * Number(cartItem.goods_weight);\r\n        }\r\n        let cAmount = checkedGoodsAmount.toFixed(2);\r\n        let aAmount = checkedGoodsAmount;\r\n        return {\r\n            cartList: cartList,\r\n            cartTotal: {\r\n                goodsCount: goodsCount,\r\n                goodsAmount: goodsAmount.toFixed(2),\r\n                checkedGoodsCount: checkedGoodsCount,\r\n                checkedGoodsAmount: cAmount,\r\n                user_id: think.userId\r\n            }\r\n        };\r\n    }\r\n};"
    ]
}